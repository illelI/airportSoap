//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//
//     Zmiany w tym pliku mogą spowodować niewłaściwe zachowanie i zostaną utracone
//     w przypadku ponownego wygenerowania kodu.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flights
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ilelli.com/airport/flights", ConfigurationName="Flights.FlightsPort")]
    public interface FlightsPort
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Flights.AllFlightsResponse> AllFlightsAsync(Flights.AllFlightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Flights.FlightsResponse> FlightsAsync(Flights.FlightsRequest1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilelli.com/airport/flights")]
    public partial class FlightDetails
    {
        
        private string flightNumberField;
        
        private string fromField;
        
        private string toField;
        
        private System.DateTime dateField;
        
        private SeatClass seatClassField;
        
        private int priceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string flightNumber
        {
            get
            {
                return this.flightNumberField;
            }
            set
            {
                this.flightNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string from
        {
            get
            {
                return this.fromField;
            }
            set
            {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string to
        {
            get
            {
                return this.toField;
            }
            set
            {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public SeatClass seatClass
        {
            get
            {
                return this.seatClassField;
            }
            set
            {
                this.seatClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int price
        {
            get
            {
                return this.priceField;
            }
            set
            {
                this.priceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilelli.com/airport/booking")]
    public enum SeatClass
    {
        
        /// <remarks/>
        ECONOMY,
        
        /// <remarks/>
        BUSINESS,
        
        /// <remarks/>
        FIRST,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(IsWrapped = true, WrapperName = "AllFlightsRequest", WrapperNamespace = "http://ilelli.com/airport/flights")]
public class AllFlightsRequest
{
    public AllFlightsRequest() {}
}
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AllFlightsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AllFlightsResponse", Namespace="http://ilelli.com/airport/flights", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("flight", IsNullable=false)]
        public Flights.FlightDetails[] AllFlightsResponse1;
        
        public AllFlightsResponse()
        {
        }
        
        public AllFlightsResponse(Flights.FlightDetails[] AllFlightsResponse1)
        {
            this.AllFlightsResponse1 = AllFlightsResponse1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "http://ilelli.com/airport/flights")]
public partial class FlightsRequest
{
    [System.Xml.Serialization.XmlElement(Order = 0)]
    public string from { get; set; }

    [System.Xml.Serialization.XmlElement(Order = 1)]
    public string to { get; set; }

    [System.Xml.Serialization.XmlIgnore]
    public DateTime Date { get; set; }

    [System.Xml.Serialization.XmlElement("date", Order = 2)]
    public string DateString
    {
        get => Date.ToString("yyyy-MM-ddTHH:mm:ss");
        set => Date = DateTime.Parse(value);
    }

    [System.Xml.Serialization.XmlElement(Order = 3)]
    public SeatClass seatClass { get; set; }
}
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FlightsRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilelli.com/airport/flights", Order=0)]
        public Flights.FlightsRequest FlightsRequest;
        
        public FlightsRequest1()
        {
        }
        
        public FlightsRequest1(Flights.FlightsRequest FlightsRequest)
        {
            this.FlightsRequest = FlightsRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FlightsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FlightsResponse", Namespace="http://ilelli.com/airport/flights", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("flight", IsNullable=false)]
        public Flights.FlightDetails[] FlightsResponse1;
        
        public FlightsResponse()
        {
        }
        
        public FlightsResponse(Flights.FlightDetails[] FlightsResponse1)
        {
            this.FlightsResponse1 = FlightsResponse1;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface FlightsPortChannel : Flights.FlightsPort, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class FlightsPortClient : System.ServiceModel.ClientBase<Flights.FlightsPort>, Flights.FlightsPort
    {
        
        /// <summary>
        /// Wdróż tę metodę częściową, aby skonfigurować punkt końcowy usługi.
        /// </summary>
        /// <param name="serviceEndpoint">Punkt końcowy do skonfigurowania</param>
        /// <param name="clientCredentials">Poświadczenia klienta</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public FlightsPortClient() : 
                base(FlightsPortClient.GetDefaultBinding(), FlightsPortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.FlightsPortSoap11.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FlightsPortClient(EndpointConfiguration endpointConfiguration) : 
                base(FlightsPortClient.GetBindingForEndpoint(endpointConfiguration), FlightsPortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FlightsPortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(FlightsPortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FlightsPortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(FlightsPortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FlightsPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Flights.AllFlightsResponse> Flights.FlightsPort.AllFlightsAsync(Flights.AllFlightsRequest request)
        {
            return base.Channel.AllFlightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Flights.AllFlightsResponse> AllFlightsAsync(AllFlightsRequest AllFlightsRequest1)
        {
            Flights.AllFlightsRequest inValue = new Flights.AllFlightsRequest();
            return ((Flights.FlightsPort)(this)).AllFlightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Flights.FlightsResponse> Flights.FlightsPort.FlightsAsync(Flights.FlightsRequest1 request)
        {
            return base.Channel.FlightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Flights.FlightsResponse> FlightsAsync(Flights.FlightsRequest FlightsRequest)
        {
            Flights.FlightsRequest1 inValue = new Flights.FlightsRequest1();
            inValue.FlightsRequest = FlightsRequest;
            return ((Flights.FlightsPort)(this)).FlightsAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }

        public static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FlightsPortSoap11))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Nie można znaleźć punktu końcowego o nazwie „{0}”.", endpointConfiguration));
        }

        public static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FlightsPortSoap11))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8080/ws");
            }
            throw new System.InvalidOperationException(string.Format("Nie można znaleźć punktu końcowego o nazwie „{0}”.", endpointConfiguration));
        }

        public static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return FlightsPortClient.GetBindingForEndpoint(EndpointConfiguration.FlightsPortSoap11);
        }

        public static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return FlightsPortClient.GetEndpointAddress(EndpointConfiguration.FlightsPortSoap11);
        }
        
        public enum EndpointConfiguration
        {
            
            FlightsPortSoap11,
        }
    }
}
